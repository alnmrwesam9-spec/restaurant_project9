# Generated by Django 5.2.4 on 2025-08-31 12:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0012_profile'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True)),
                ('label_de', models.CharField(max_length=120)),
                ('label_en', models.CharField(blank=True, default='', max_length=120)),
                ('label_ar', models.CharField(blank=True, default='', max_length=120)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.AddField(
            model_name='dish',
            name='codes_updated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dish',
            name='extra_additives',
            field=models.JSONField(blank=True, default=list, help_text='أرقام إضافية على مستوى الطبق مثل [1,3]'),
        ),
        migrations.AddField(
            model_name='dish',
            name='extra_allergens',
            field=models.JSONField(blank=True, default=list, help_text="حروف إضافية على مستوى الطبق مثل ['A','G']"),
        ),
        migrations.AddField(
            model_name='dish',
            name='generated_codes',
            field=models.CharField(blank=True, default='', help_text='الكود المتولّد آليًا بصيغة (A,C,G,1,3).', max_length=255),
        ),
        migrations.AddField(
            model_name='dish',
            name='has_manual_codes',
            field=models.BooleanField(default=False, help_text='إذا true يتم تجاهل generated_codes.'),
        ),
        migrations.AddField(
            model_name='dish',
            name='manual_codes',
            field=models.CharField(blank=True, help_text='قيمة يدوّنية للكود بصيغة (A,C,G,1,3).', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='dish',
            name='allergy_info',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='عناصر الحساسية (قديم)'),
        ),
        migrations.CreateModel(
            name='AdditiveLegend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('label_de', models.CharField(max_length=180)),
                ('label_en', models.CharField(blank=True, default='', max_length=180)),
                ('label_ar', models.CharField(blank=True, default='', max_length=180)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additives_legend', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('additives', models.JSONField(blank=True, default=list)),
                ('synonyms', models.JSONField(blank=True, default=list)),
                ('allergens', models.ManyToManyField(blank=True, related_name='ingredients', to='core.allergen')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='dish',
            name='ingredients',
            field=models.ManyToManyField(blank=True, related_name='dishes', to='core.ingredient'),
        ),
        migrations.AddIndex(
            model_name='dish',
            index=models.Index(fields=['section', 'name'], name='core_dish_section_cc26b0_idx'),
        ),
        migrations.AddIndex(
            model_name='dish',
            index=models.Index(fields=['has_manual_codes'], name='core_dish_has_man_199884_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='additivelegend',
            unique_together={('owner', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='ingredient',
            unique_together={('owner', 'name')},
        ),
    ]
